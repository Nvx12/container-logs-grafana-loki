x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./config/grafana-datasources.yml
        target: /etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    environment:
      - 'GF_DEFAULT_APP_MODE=production'
      - 'GF_LOG_LEVEL=debug'
      - 'GF_SMTP_ENABLED=true'
      - 'GF_SMTP_HOST=firstdeliverygroup-com.mail.protection.outlook.com:25'
      - 'GF_SMTP_FROM_ADDRESS=grafana@firstdeliverygroup.com'
      - 'GF_SERVER_ROOT_URL=https://monitoring.first-admin.com'
    networks:
      - tun_prod
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging: *default-logging

  loki:
    image: grafana/loki:2.8.4
    ports:
      - target: 3100
        published: 3100
        protocol: tcp
        mode: host
    volumes:
      - loki-data:/loki
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - type: bind
        source: ./config/loki-config.yml
        target: /etc/loki/local-config.yml
    command: -config.file=/etc/loki/local-config.yml
    networks:
      - tun_prod
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging: *default-logging
  promtail:
    image: grafana/promtail:2.8.4
    volumes:
      - type: bind
        source: ./config/docker-config.yml
        target: /etc/promtail/docker-config.yml
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yml
    depends_on:
      - loki
    networks:
      - tun_prod
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging: *default-logging
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - prom_data:/prometheus
      - type: bind
        source: ./config/prometheus.yml
        target: /etc/prometheus/prometheus.yml
    networks:
      - tun_prod
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging: *default-logging

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - tun_prod
    deploy:
      mode: global
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    logging: *default-logging

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - tun_prod
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging: *default-logging

volumes:
  loki-data:
    driver: local
  grafana-data:
    driver: local
  prom_data:
    driver: local

configs:
  prometheus_config:
    file: ./config/prometheus.yml

networks:
  tun_prod:
    external: true
